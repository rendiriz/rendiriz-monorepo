// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  created_at        Int?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Commit {
  id              String    @id @default(cuid())
  commitId        String
  short_id        String
  created_at      DateTime
  title           String
  message         String
  author_name     String
  author_email    String
  authored_date   DateTime
  committer_name  String
  committer_email String
  committed_date  DateTime
  web_url         String
  status          String?
  project_id      Int
  logbooks        Logbook[]
}

model Logbook {
  id               String    @id @default(cuid())
  commitId         String
  projectId        String
  projectName      String
  nameTask         String
  tupoksiJabatanId String
  dateTask         DateTime
  dateSend         DateTime?
  difficultyTask   Int
  evidenceTask     String?
  documentTask     String
  workPlace        String    @default("WFH")
  organizerTask    String    @default("JDS")
  isMainTask       Boolean?
  isDocumentLink   Boolean   @default(true)
  isStatus         String
  commit           Commit    @relation(fields: [commitId], references: [id], onDelete: Cascade)
}
